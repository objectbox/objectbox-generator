// Code generated by ObjectBox; DO NOT EDIT.

#pragma once

#ifdef __cplusplus
#include <cstdbool>
#include <cstdint>
extern "C" {
#else
#include <stdbool.h>
#include <stdint.h>
#endif
#include "objectbox.h"

/// Initializes an ObjectBox model for all entities. 
/// The returned pointer may be NULL if the allocation failed. If the returned model is not NULL, you should check if   
/// any error occurred by calling obx_model_error_code() and/or obx_model_error_message(). If an error occurred, you're
/// responsible for freeing the resources by calling obx_model_free().
/// In case there was no error when setting the model up (i.e. obx_model_error_code() returned 0), you may configure 
/// OBX_store_options with the model by calling obx_opt_model() and subsequently opening a store with obx_store_open().
/// As soon as you call obx_store_open(), the model pointer is consumed and MUST NOT be freed manually.
static inline OBX_model* create_obx_model() {
    OBX_model* model = obx_model();
    if (!model) return NULL;
    
    obx_model_entity(model, "Typeful", 1, 8717895732742165505);
    obx_model_entity_flags(model, OBXEntityFlags_SHARED_GLOBAL_IDS | OBXEntityFlags_SYNC_ENABLED);
    obx_model_property(model, "id", OBXPropertyType_Long, 1, 3390393562759376202);
    obx_model_property_flags(model, OBXPropertyFlags_ID);
    obx_model_property(model, "int", OBXPropertyType_Int, 2, 2669985732393126063);
    obx_model_property(model, "int8", OBXPropertyType_Byte, 3, 1774932891286980153);
    obx_model_property(model, "int16", OBXPropertyType_Short, 4, 6044372234677422456);
    obx_model_property(model, "int32", OBXPropertyType_Int, 5, 8274930044578894929);
    obx_model_property(model, "int64", OBXPropertyType_Long, 6, 1543572285742637646);
    obx_model_property(model, "uint", OBXPropertyType_Int, 7, 2661732831099943416);
    obx_model_property_flags(model, OBXPropertyFlags_UNSIGNED);
    obx_model_property(model, "uint8", OBXPropertyType_Byte, 8, 8325060299420976708);
    obx_model_property_flags(model, OBXPropertyFlags_UNSIGNED);
    obx_model_property(model, "uint16", OBXPropertyType_Short, 9, 7837839688282259259);
    obx_model_property_flags(model, OBXPropertyFlags_UNSIGNED);
    obx_model_property(model, "uint32", OBXPropertyType_Int, 10, 2518412263346885298);
    obx_model_property_flags(model, OBXPropertyFlags_UNSIGNED);
    obx_model_property(model, "uint64", OBXPropertyType_Long, 11, 5617773211005988520);
    obx_model_property_flags(model, OBXPropertyFlags_UNSIGNED);
    obx_model_property(model, "bool", OBXPropertyType_Bool, 12, 2339563716805116249);
    obx_model_property(model, "string", OBXPropertyType_String, 13, 7144924247938981575);
    obx_model_property(model, "stringvector", OBXPropertyType_StringVector, 14, 161231572858529631);
    obx_model_property(model, "byte", OBXPropertyType_Byte, 15, 7259475919510918339);
    obx_model_property(model, "ubyte", OBXPropertyType_Byte, 16, 7373105480197164748);
    obx_model_property_flags(model, OBXPropertyFlags_UNSIGNED);
    obx_model_property(model, "bytevector", OBXPropertyType_ByteVector, 17, 3287288577352441706);
    obx_model_property(model, "ubytevector", OBXPropertyType_ByteVector, 18, 3930927879439176946);
    obx_model_property(model, "float32", OBXPropertyType_Float, 19, 4706154865122290029);
    obx_model_property(model, "float64", OBXPropertyType_Double, 20, 2217592893536642650);
    obx_model_property(model, "float", OBXPropertyType_Float, 21, 1929546706668609706);
    obx_model_property(model, "floatvector", OBXPropertyType_FloatVector, 22, 6392442863481646880);
    obx_model_property(model, "double", OBXPropertyType_Double, 23, 3706853784096366226);
    obx_model_property(model, "relId", OBXPropertyType_Relation, 24, 2627038740284806767);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED | OBXPropertyFlags_INDEX_PARTIAL_SKIP_ZERO);
    obx_model_property_relation(model, "AnnotatedEntity", 1, 6303220950515014660);
    obx_model_entity_last_property_id(model, 24, 2627038740284806767);
    
    obx_model_entity(model, "AnnotatedEntity", 2, 2259404117704393152);
    obx_model_entity_flags(model, OBXEntityFlags_SYNC_ENABLED);
    obx_model_property(model, "identifier", OBXPropertyType_Long, 1, 4035568504096476779);
    obx_model_property_flags(model, OBXPropertyFlags_ID | OBXPropertyFlags_ID_SELF_ASSIGNABLE);
    obx_model_property(model, "name", OBXPropertyType_String, 2, 959367522974354090);
    obx_model_property_flags(model, OBXPropertyFlags_INDEX_HASH);
    obx_model_property_index_id(model, 2, 2914295034816259174);
    obx_model_property(model, "time", OBXPropertyType_Date, 3, 1395437218309923052);
    obx_model_property(model, "relId", OBXPropertyType_Relation, 4, 6745438398739480977);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED | OBXPropertyFlags_INDEX_PARTIAL_SKIP_ZERO);
    obx_model_property_relation(model, "Typeful", 3, 2897681629866238117);
    obx_model_property(model, "unique", OBXPropertyType_String, 5, 3398579248012586914);
    obx_model_property_flags(model, OBXPropertyFlags_INDEX_HASH | OBXPropertyFlags_UNIQUE);
    obx_model_property_index_id(model, 4, 5974317550424871033);
    obx_model_property(model, "uniqueValue", OBXPropertyType_String, 6, 3317123977833389635);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED | OBXPropertyFlags_UNIQUE);
    obx_model_property_index_id(model, 5, 5001958211167890979);
    obx_model_property(model, "uniqueHash", OBXPropertyType_String, 7, 167566062957544642);
    obx_model_property_flags(model, OBXPropertyFlags_INDEX_HASH | OBXPropertyFlags_UNIQUE);
    obx_model_property_index_id(model, 6, 4778690082005258714);
    obx_model_property(model, "uniqueHash64", OBXPropertyType_String, 8, 1059542851699319360);
    obx_model_property_flags(model, OBXPropertyFlags_INDEX_HASH64 | OBXPropertyFlags_UNIQUE);
    obx_model_property_index_id(model, 7, 6972732843819909978);
    obx_model_property(model, "uid", OBXPropertyType_Int, 9, 5558237345453186302);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED | OBXPropertyFlags_UNIQUE);
    obx_model_property_index_id(model, 8, 7845762441295307478);
    obx_model_property(model, "hnswVectorEuclidean", OBXPropertyType_FloatVector, 10, 771642788862502430);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED);
    obx_model_property_index_hnsw_dimensions(model, 3);
    obx_model_property_index_hnsw_distance_type(model, OBXVectorDistanceType_Euclidean);
    obx_model_property_index_hnsw_neighbors_per_node(model, 10);
    obx_model_property_index_hnsw_indexing_search_count(model, 5);
    obx_model_property_index_hnsw_reparation_backlink_probability(model, 0.7);
    obx_model_property_index_hnsw_vector_cache_hint_size_kb(model, 1024);
    obx_model_property_index_hnsw_flags(model, (OBXHnswFlags_DebugLogs | OBXHnswFlags_DebugLogsDetailed | OBXHnswFlags_ReparationLimitCandidates | OBXHnswFlags_VectorCacheSimdPaddingOff));
    obx_model_property_index_id(model, 9, 8514850266767180993);
    obx_model_property(model, "hnswVectorCosine", OBXPropertyType_FloatVector, 11, 8683452355129068124);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED);
    obx_model_property_index_hnsw_dimensions(model, 2);
    obx_model_property_index_hnsw_distance_type(model, OBXVectorDistanceType_Cosine);
    obx_model_property_index_id(model, 10, 4345851588384648695);
    obx_model_property(model, "hnswVectorDot", OBXPropertyType_FloatVector, 12, 7699391924090763411);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED);
    obx_model_property_index_hnsw_dimensions(model, 2);
    obx_model_property_index_hnsw_distance_type(model, OBXVectorDistanceType_DotProduct);
    obx_model_property_index_id(model, 11, 388440063886460141);
    obx_model_property(model, "hnswVectorDotNonNormalized", OBXPropertyType_FloatVector, 13, 7561811714888168464);
    obx_model_property_flags(model, OBXPropertyFlags_INDEXED);
    obx_model_property_index_hnsw_dimensions(model, 2);
    obx_model_property_index_hnsw_distance_type(model, OBXVectorDistanceType_DotProductNonNormalized);
    obx_model_property_index_id(model, 12, 3959279844101328186);
    obx_model_relation(model, 1, 8902041070398994519, 1, 8717895732742165505);
    obx_model_relation(model, 2, 303089054982227392, 1, 8717895732742165505);
    obx_model_entity_last_property_id(model, 13, 7561811714888168464);
    
    obx_model_entity(model, "TSDate", 3, 6050128673802995827);
    obx_model_property(model, "id", OBXPropertyType_Long, 1, 7338728586234333996);
    obx_model_property_flags(model, OBXPropertyFlags_ID);
    obx_model_property(model, "timestamp", OBXPropertyType_Date, 2, 5392504858645185670);
    obx_model_property_flags(model, OBXPropertyFlags_ID_COMPANION);
    obx_model_entity_last_property_id(model, 2, 5392504858645185670);
    
    obx_model_entity(model, "TSDateNano", 4, 501233450539197794);
    obx_model_property(model, "id", OBXPropertyType_Long, 1, 7847956203786849690);
    obx_model_property_flags(model, OBXPropertyFlags_ID);
    obx_model_property(model, "timestamp", OBXPropertyType_DateNano, 2, 406703151708498928);
    obx_model_property_flags(model, OBXPropertyFlags_ID_COMPANION);
    obx_model_entity_last_property_id(model, 2, 406703151708498928);
    
    obx_model_last_entity_id(model, 4, 501233450539197794);
    obx_model_last_index_id(model, 12, 3959279844101328186);
    obx_model_last_relation_id(model, 2, 303089054982227392);
    return model; // NOTE: the returned model will contain error information if an error occurred.
}

#ifdef __cplusplus
}
#endif
